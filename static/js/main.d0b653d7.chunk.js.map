{"version":3,"sources":["reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","actions/types.js","store.js","utils/setAuthToken.js","actions/authActions.js","components/private-route/PrivateRoute.js","components/layout/Upload.js","components/layout/ListUserFiles.js","components/dashboard/Dashboard.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","type","payload","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","connect","Component","component","rest","render","props","to","Upload","checkMimeType","e","files","target","err","types","x","every","index","checkType","length","value","setState","onFileChangeHandler","selectedFiles","onUploadClickHandler","data","FormData","append","Axios","post","onUploadProgress","ProgressEvent","progress","loaded","total","M","toast","html","displayLength","fileInputRef","setTimeout","window","location","reload","className","multiple","onChange","this","ref","style","width","height","onClick","File","triggerBtn","name","modified","size","options","onOpenStart","header","trigger","actions","id","padding","htmlFor","ListUserFiles","handleActionClick","fileName","innerText","downloadFile","deleteFile","newName","renameFile","a","get","then","res","Download","catch","isUndefined","response","forEach","part","formatBytes","parsedDate","Date","toString","substring","console","log","bytes","decimals","k","dm","sizes","i","Math","floor","parseFloat","pow","toFixed","delete","fileObj","splice","fileRows","map","push","key","leaveAnimation","appearAnimation","Dashboard","UploadModalButton","fontSize","verticalAlign","paddingLeft","Navbar","onLogoutClick","preventDefault","fontFamily","paddingBottom","display","borderRadius","letterSpacing","marginTop","PropTypes","func","isRequired","Landing","history","Register","validateInput","onSubmit","newUser","email","password","password2","Object","entries","registerUser","nextProps","validator","isEmail","isLength","min","max","wrongpassword","noValidate","error","classnames","invalid","emailnotfound","userData","withRouter","Login","loginUser","setItem","jwt_decode","checkToken","jwtToken","currentTime","now","exp","href","App","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0b653d7.chunk.js","sourcesContent":["// Reducers are pure functions that specify how application state should change in response to an action.\n// Reducers respond with the new state, which is passed to our store and, in turn, our UI.\n// Our flow for reducers will go as follows.\n// Import all our actions from our types.js file\n// Define our initialState\n// Define how state should change based on actions with a switch statement\n// Remember that actions only describe what happened, but don't describe how the application's state changes.\n\n// Import types of actions\nimport { SET_CURRENT_USER, USER_LOADING } from '../actions/types';\n\nconst isEmpty = require('is-empty');\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\n// on occurence of action, do...\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    // Object.assign({}, state, {visibilityFilter: action.filter}) == {...state, visibilityFilter: action.filter }\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","// Reducers are pure functions that specify how application state should change in response to an action.\n// Reducers respond with the new state, which is passed to our store and, in turn, our UI.\n// Our flow for reducers will go as follows.\n// Import all our actions from our types.js file\n// Define our initialState\n// Define how state should change based on actions with a switch statement\n// Remember that actions only describe what happened, but don't describe how the application's state changes.\n\nimport { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","// rootReducer aka index.js in this dir can be referenced just by ./reducers\n// Reducers are pure functions that specify how application state should change in response to an action.\n// Reducers respond with the new state, which is passed to our store and, in turn, our UI.\n// Our flow for reducers will go as follows.\n// Import all our actions from our types.js file\n// Define our initialState\n// Define how state should change based on actions with a switch statement\n// Remember that actions only describe what happened, but don't describe how the application's state changes.\n\nimport { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","// An interaction (such as a button click or a form submission) in our React components will fire off an action and, in turn, dispatch an action to our store.\n\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","/* \n\ncreateStore() creates a Redux store that holds the complete state tree of your app. There should only be a single store in your app.\nMiddleware is the suggested way to extend Redux with custom functionality. Middleware lets you wrap the store's dispatch method for fun and profit. The key feature of middleware is that it is composable. Multiple middleware can be combined together, where each middleware requires no knowledge of what comes before or after it in the chain.\n\nThe most common use case for middleware is to support asynchronous actions without much boilerplate code or a dependency on a library like Rx. It does so by letting you dispatch async actions in addition to normal actions.\n\nFor example, redux-thunk lets the action creators invert control by dispatching functions. They would receive dispatch as an argument and may call it asynchronously. Such functions are called thunks. Another example of middleware is redux-promise. It lets you dispatch a Promise async action, and dispatches a normal action when the Promise resolves.\n\n*/\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\n// createStore(reducer, [preloadedState], [enhancer])\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    // Comment below if running without redux devtools extension\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from './types';\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post('/api/users/register', userData)\n    .then(res => history.push('/login')) // re-direct to login on successful register\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    }\n      \n    );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post('/api/users/login', userData)\n    .then(res => {\n      // Save to localStorage\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem('jwtToken', token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem('jwtToken');\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? <Component {...props} /> : <Redirect to='/login' />\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from 'react';\nimport './Upload.css';\nimport Axios from 'axios';\nimport M from 'materialize-css';\n\nclass Upload extends Component {\n  fileInputRef;\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFiles: '',\n      errors: '',\n      loaded: 0\n    };\n  }\n\n  checkMimeType = e => {\n    let checkType = (type, index) => {\n      if (files[index].type === type) {\n        // make = -> += to append errors\n        err = files[index].type + ' ';\n        return false;\n      }\n      return true;\n    };\n\n    let files = e.target.files;\n    let err = '';\n    // mime types block list\n    const types = ['text/javascript'];\n\n    for (let x = 0; x < files.length; x++) {\n      types.every(type => checkType(type, x));\n    }\n    err += 'uploading not supported';\n    if (err !== 'uploading not supported') {\n      e.target.value = null; // discard selected files\n      this.setState({\n        errors: err\n      });\n      return false;\n    }\n    return true;\n  };\n\n  onFileChangeHandler = e => {\n    if (this.checkMimeType(e)) {\n      this.setState({\n        selectedFiles: e.target.files,\n        errors: ''\n      });\n    }\n  };\n\n  onUploadClickHandler = e => {\n    this.setState({\n      errors: ''\n    });\n    // The file from a state is appended as a file to FormData\n    let data = new FormData();\n    for (var x = 0; x < this.state.selectedFiles.length; x++) {\n      data.append('file', this.state.selectedFiles[x]);\n    }\n    if (this.state.selectedFiles !== '') {\n      Axios.post('/api/files/upload', data, {\n        onUploadProgress: ProgressEvent => {\n          let progress = (ProgressEvent.loaded / ProgressEvent.total) * 100;\n          if (progress === 100) {\n            M.toast({ html: 'Upload complete.', displayLength: 2000 });\n            this.setState({\n              selectedFiles: ''\n            });\n            this.fileInputRef.value = '';\n            setTimeout(() => window.location.reload(), 2050);\n          }\n          this.setState({\n            loaded: progress\n          });\n        }\n      });\n    } else {\n      this.setState({ errors: 'No files selected.' });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <div className='files'>\n          <input\n            type='file'\n            multiple\n            onChange={this.onFileChangeHandler}\n            ref={ref => (this.fileInputRef = ref)}\n          />\n        </div>\n        <center>\n          <div\n            className='progress'\n            style={{ width: this.state.loaded === 0 ? '0%' : this.state.loaded === 100 ? '0%' : '70%' }}>\n            <div className='determinate blue lighten-1' style={{ width: this.state.loaded + '%' }}></div>\n          </div>\n          <button\n            type='button'\n            style={{ width: '80%', height: 50 }}\n            className='btn waves-effect waves-light green'\n            onClick={this.onUploadClickHandler}>\n            Upload Files\n          </button>\n          <p className='red-text'>{this.state.errors}</p>\n        </center>\n      </>\n    );\n  }\n}\n\nexport default Upload;\n","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport FlipMove from 'react-flip-move';\nimport Download from 'js-file-download';\nimport { Modal } from 'react-materialize';\nimport { isUndefined } from 'util';\nimport M from 'materialize-css';\n\nclass ListUserFiles extends Component {\n  constructor() {\n    super();\n    this.state = {\n      files: [],\n      newName: ''\n    };\n  }\n\n  componentDidMount() {\n    Axios.post('/api/files/list')\n      .then(response => {\n        if (response.data.length > 0) {\n          let files = response.data;\n          // default size in bytes, need to convert\n          files.forEach((part, index) => {\n            files[index].size = this.formatBytes(files[index].size);\n            let parsedDate = new Date(files[index].modified);\n            files[index].modified = parsedDate.toString().substring(0, 21);\n          });\n          this.setState({\n            files: files\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n  deleteFile(fileName) {\n    Axios.delete('/api/files/delete/' + fileName)\n      .then(response => {\n        if (response.data === 'deleted') {\n          M.toast({ html: 'Deleted file.', displayLength: 1000 });\n          this.state.files.forEach((fileObj, index) => {\n            if (fileObj.name === fileName) {\n              let files = this.state.files.splice(0);\n              files.splice(index, 1);\n              this.setState({ files: files });\n            }\n          });\n        }\n      })\n      .catch(err => {\n        M.toast({ html: err });\n      });\n  }\n\n  renameFile(fileName) {\n    Axios.post('/api/files/rename/' + fileName, { newName: this.state.newName })\n      .then(res => {\n        if (res.data === 'renamed') {\n          M.toast({ html: 'Renamed file.', displayLength: 1000 });\n          setTimeout(() => window.location.reload(), 1050);\n        }\n      })\n      .catch(err => {\n        M.toast({ html: err, displayLength: 1000 });\n      });\n  }\n\n  handleActionClick = (e, fileName) => {\n    if (e.target.innerText === 'download') {\n      this.downloadFile(e, fileName);\n    }\n    if (e.target.innerText === 'delete') {\n      this.deleteFile(fileName);\n    }\n    if (e.target.id === 'do-rename') {\n      if (this.state.newName !== '') {\n        this.renameFile(fileName);\n      } else {\n        M.toast({ html: 'No file name specified.', displayLength: 1000 });\n      }\n    }\n  };\n\n  downloadFile = async (e, fileName) => {\n    Axios.get('/api/files/get/' + fileName)\n      .then(res => {\n        Download(res.data, fileName);\n      })\n      .catch(err => {\n        M.toast({ html: err });\n      });\n  };\n\n  onChange = e => {\n    if (!isUndefined(e.target)) {\n      this.setState({ newName: e.target.value });\n    } else this.setState({ newName: '' });\n  };\n\n  render() {\n    let fileRows = this.state.files.map(fileObj => {\n      let fileRows = [];\n      fileRows.push(\n        <File\n          key={fileObj.name + fileObj.size}\n          name={fileObj.name}\n          modified={fileObj.modified}\n          size={fileObj.size}\n          onClick={this.handleActionClick}\n          onChange={this.onChange}\n        />\n      );\n      return fileRows;\n    });\n    return (\n      <FlipMove leaveAnimation='elevator' appearAnimation='elevator'>\n        <table className='highlight'>\n          <thead>\n            <tr className='grey-text text-darken-2'>\n              <th style={{}}>Name</th>\n              <th style={{}}>Last Modified</th>\n              <th style={{ width: '10%' }}>File Size</th>\n              <th style={{ width: '15%' }} className='center'>\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody>{fileRows}</tbody>\n        </table>\n      </FlipMove>\n    );\n  }\n}\n\nfunction File(props) {\n  const triggerBtn = (\n    <button className='material-icons-outlined btn-flat' onClick={e => props.onClick(e, props.name)}>\n      create\n    </button>\n  );\n  return (\n    <tr>\n      <td>{props.name}</td>\n      <td>{props.modified}</td>\n      <td>{props.size}</td>\n      <td className='center'>\n        <button className='material-icons-outlined btn-flat' onClick={e => props.onClick(e, props.name)}>\n          download\n        </button>\n        <button className='material-icons-outlined btn-flat' onClick={e => props.onClick(e, props.name)}>\n          delete\n        </button>\n        <Modal\n          options={{ onOpenStart: props.onChange }}\n          header='Rename File'\n          trigger={triggerBtn}\n          actions={\n            <>\n              <button\n                className='btn-flat waves-light waves-effect'\n                onClick={e => props.onClick(e, props.name)}\n                id='do-rename'>\n                Rename\n              </button>\n              <button className='btn-flat modal-close waves-light waves-effect'>Close</button>\n            </>\n          }>\n          <div style={{ padding: '10px 0px' }}>\n            <div className='input-field'>\n              <i className='material-icons prefix'>file_copy</i>\n              <input id='fileName' type='text' onChange={props.onChange} />\n              <label htmlFor='fileName'>Rename {props.name}</label>\n            </div>\n          </div>\n        </Modal>\n      </td>\n    </tr>\n  );\n}\n\nexport default ListUserFiles;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Upload from '../layout/Upload';\nimport ListUserFiles from '../layout/ListUserFiles';\nimport { Modal } from 'react-materialize';\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className='container'>\n        <div className='row'>\n          <div className='col s12'>\n            <UploadModalButton />\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col s12'>\n            <ListUserFiles />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction UploadModalButton() {\n  const triggerBtn = (\n    <button className='btn-large waves-effect waves-light blue accent-3'>\n      <i className='material-icons' style={{ fontSize: 18, verticalAlign: 'top' }}>\n        cloud_upload\n      </i>\n      <span style={{ paddingLeft: 8, verticalAlign: 'top' }}>Upload</span>\n    </button>\n  );\n  return (\n    <Modal\n      header='Select files to Upload'\n      trigger={triggerBtn}\n      actions={<button className='btn-flat modal-close waves-light waves-effect'>Close</button>}\n      // open={true}\n    >\n      <Upload />\n    </Modal>\n  );\n}\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(Dashboard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Navbar extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  render() {\n    return (\n      <div className='navbar-fixed'>\n        <nav className='z-depth-0'>\n          <div className='nav-wrapper white'>\n            <Link\n              to='/'\n              style={{ fontFamily: \"monospace\" }}\n              className='brand-logo center waves-effect black-text'>\n              <i className='material-icons'>cloud</i>\n              CLOUDY\n            </Link>\n\n            <div className='right'>\n              <div className='container'>\n                <button\n                  className='hide-on-large-only btn-flat waves-effect'\n                  onClick={this.onLogoutClick}\n                  style={{\n                    verticalAlign: \"top\",\n                    paddingBottom: 50,\n                    ...(this.props.auth.isAuthenticated\n                      ? {}\n                      : { display: \"none\" })\n                  }}>\n                  <i className='material-icons'>logout</i>\n                </button>\n                <button\n                  style={{\n                    width: \"110px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.2px\",\n                    marginTop: \"0.5rem\",\n                    ...(this.props.auth.isAuthenticated\n                      ? {}\n                      : { display: \"none\" })\n                  }}\n                  onClick={this.onLogoutClick}\n                  className='right btn waves-effect hide-on-med-and-down waves-light hoverable blue accent-3'>\n                  Logout\n                </button>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  logoutUser: PropTypes.func.isRequired\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Navbar);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Landing extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Home page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ height: '75vh' }} className='container valign-wrapper'>\n        <div className='row'>\n          <div className='col s12 center-align'>\n            <h4>\n              <b>Cloud Storage</b> for the online{' '}\n              <span style={{ fontFamily: 'monospace' }}>generation</span>\n            </h4>\n            <p className='flow-text grey-text text-darken-1'>\n              Cloudy is a secure cloud storage platform, where you can store, share and work on all\n              your files.\n              <br />\n              You can access them on any device, anywhere you go!\n            </p>\n            <br />\n            <div className='col s6'>\n              <Link\n                to='/register'\n                style={{\n                  width: '140px',\n                  borderRadius: '3px',\n                  letterSpacing: '1.5px'\n                }}\n                className='btn btn-large waves-effect waves-light hoverable blue accent-3'>\n                Register\n              </Link>\n            </div>\n            <div className='col s6'>\n              <Link\n                to='/login'\n                style={{\n                  width: '140px',\n                  borderRadius: '3px',\n                  letterSpacing: '1.5px'\n                }}\n                className='btn btn-large waves-effect hoverable white black-text'>\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport validator from \"validator\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    // Create state for Register fields\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      // console.log(nextProps.errors);\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  validateInput(id = \"\", value = \"\") {\n    let errors = { ...this.state.errors };\n    if ((id === \"email\") & !validator.isEmail(value)) {\n      errors.email = \"Invalid email address.\";\n    } else if (id === \"email\") {\n      delete errors.email;\n    }\n    if ((id === \"name\") & validator.isEmpty(value)) {\n      errors.name = \"Name field is required.\";\n    } else if (id === \"name\") {\n      delete errors.name;\n    }\n    if ((id === \"password\") & !validator.isLength(value, { min: 6, max: 30 })) {\n      delete errors.wrongpassword;\n      errors.password =\n        \"Password must consist of 6 to 30 alphanumeric characters.\";\n    } else if (id === \"password\") {\n      if (value !== this.state.password2) {\n        errors.password2 = \"Passwords do not match.\";\n      } else {\n        delete errors.password2;\n      }\n\n      delete errors.password;\n    }\n    if ((id === \"password2\") & (value !== this.state.password)) {\n      errors.password2 = \"Passwords do not match.\";\n    } else if (id === \"password2\") {\n      delete errors.password2;\n    }\n    if ((id === \"\") & validator.isEmpty(this.state.name)) {\n      errors.name = \"Name field is required.\";\n    }\n    if ((id === \"\") & validator.isEmpty(this.state.email)) {\n      errors.email = \"Email field is required.\";\n    }\n    if ((id === \"\") & validator.isEmpty(this.state.password2)) {\n      errors.password2 = \"Confirm password field is required.\";\n    }\n    if ((id === \"\") & validator.isEmpty(this.state.password)) {\n      errors.password = \"Password field is required.\";\n    }\n    return errors;\n  }\n\n  // assign function body to a variable and set it in onEvent to prevent having to bind(this)\n  onChange = e => {\n    let errors = this.validateInput(e.target.id, e.target.value);\n    this.setState({ [e.target.id]: e.target.value, errors: errors });\n  };\n  onSubmit = e => {\n    // Prevent default submit behavior\n    e.preventDefault();\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n    // trigger default arg value for validateInput\n    let errors = this.validateInput();\n    this.setState({\n      errors: errors\n    });\n    errors = { ...errors, ...this.state.errors };\n    if (Object.entries(errors).length === 0) {\n      this.props.registerUser(newUser, this.props.history);\n    }\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className='container'>\n        <div style={{ marginTop: \"2rem\" }} className='row'>\n          <div className='col s12 m8 offset-m2'>\n            <Link to='/' className='btn-flat waves-effect'>\n              <i className='material-icons left'>keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className='col s12'>\n              <h4>\n                <b>Register</b> your account\n              </h4>\n              <p className='grey-text text-darken-1'>\n                Already have an account? <Link to='/login'>Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className='input-field col s12'>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id='name'\n                  type='text'\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor='name'>Name</label>\n                <span className='red-text'>{errors.name}</span>\n              </div>\n              <div className='input-field col s12'>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                  error={errors.email}\n                  id='email'\n                  type='email'\n                />\n                <label htmlFor='email'>Email</label>\n                <span className='red-text'>\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className='input-field col s12'>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id='password'\n                  type='password'\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor='password'>Password</label>\n                <span className='red-text'>{errors.password}</span>\n              </div>\n              <div className='input-field col s12'>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id='password2'\n                  type='password'\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor='password2'>Confirm Password</label>\n                <span className='red-text'>{errors.password2}</span>\n              </div>\n              <div className='col s12' style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type='submit'\n                  className='btn btn-large waves-effect waves-light hoverable blue accent-3'>\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Since we cannot define types in our constructor, it is considered good convention to do so using the prop-types package.\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\n/*\nYou may also notice we wrapped our Register with a withRouter(). While it is easy to redirect within a component (can simply say this.props.history.push('/dashboard') for example), we can’t do that by default within an action. To allow us to redirect within an action, we\n* Used withRouter from react-router-dom, wrapping our component in our export withRouter()\n* Will add a parameter to this.props.history within our call to this.props.registerUser(newUser, this.props.history) in our onSubmit event so we can easily access it within our action (step iv below)\n*/\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/authActions';\nimport classnames from 'classnames';\nimport validator from 'validator';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/dashboard'); // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  // Client side basic input validation\n  validateInput(id = '', value = '') {\n    let errors = { ...this.state.errors };\n    if ((id === 'email') & !validator.isEmail(value)) {\n      errors.email = 'Invalid email address.';\n    } else if (id === 'email') {\n      delete errors.email;\n    }\n    if ((id === 'password') & !validator.isLength(value, { min: 6, max: 30 })) {\n      delete errors.wrongpassword;\n      errors.password = 'Password must consist of 6 to 30 alphanumeric characters.';\n    } else if (id === 'password') {\n      delete errors.password;\n    }\n    if ((id === '') & validator.isEmpty(this.state.email)) {\n      errors.email = 'Email field is required.';\n    }\n    if ((id === '') & validator.isEmpty(this.state.password)) {\n      errors.password = 'Password field is required.';\n    }\n    return errors;\n  }\n\n  onChange = e => {\n    let errors = this.validateInput(e.target.id, e.target.value);\n    this.setState({ [e.target.id]: e.target.value, errors: errors });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    // console.log(userData);\n    // trigger default arg value for validateInput\n    let errors = this.validateInput();\n    this.setState({\n      errors: errors\n    });\n    errors = { ...errors, ...this.state.errors };\n    if (Object.entries(errors).length === 0) {\n      this.props.loginUser(userData);\n    }\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className='container'>\n        <div style={{ marginTop: '2rem' }} className='row'>\n          <div className='col s12 m8 offset-m2'>\n            <Link to='/' className='btn-flat waves-effect'>\n              <i className='material-icons left'>keyboard_backspace</i> Back to home\n            </Link>\n            <div className='col s12'>\n              <h4>\n                <b>Login</b> to{' '}\n                <span style={{ fontFamily: 'monospace' }} className='brand-logo black-text'>\n                  <i className='material-icons'>cloud</i>\n                  <span style={{ fontFamily: 'Verdana' }}> </span>CLOUDY\n                </span>\n              </h4>\n              <p className='grey-text text-darken-1'>\n                Don't have an account? <Link to='/register'>Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className='input-field col s12'>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id='email'\n                  type='email'\n                  className={classnames('', {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor='email'>Email</label>\n                <span className='red-text'>\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className='input-field col s12'>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id='password'\n                  type='password'\n                  className={classnames('', {\n                    invalid: errors.password || errors.wrongpassword\n                  })}\n                />\n                <label htmlFor='password'>Password</label>\n                <span className='red-text'>\n                  {errors.password}\n                  {errors.wrongpassword}\n                </span>\n              </div>\n              <div className='col s12' style={{ paddingLeft: '11.250px' }}>\n                <button\n                  style={{\n                    width: '150px',\n                    borderRadius: '3px',\n                    letterSpacing: '1.5px',\n                    marginTop: '1rem'\n                  }}\n                  type='submit'\n                  className='btn btn-large waves-effect waves-light hoverable blue accent-3'>\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Provider which provides application level state to components\nimport { Provider } from 'react-redux';\n// Storage for application level state\nimport store from './store';\n\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\n\nimport PrivateRoute from './components/private-route/PrivateRoute';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\n\n\nlet checkToken = () => {\n  // Check for token to keep user logged in\n  if (localStorage.jwtToken) {\n    console.log('checkToken()');\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded));\n    // Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser());\n      // Redirect to login\n      window.location.href = './login';\n    }\n  }  \n}\n\nfunction App() {\n  checkToken();\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className='App'>\n          <Navbar />\n          <Route exact path='/' component={Landing}/>\n          <Route exact path='/register' component={Register}/>\n          <Route exact path='/login' component={Login}/>\n          <Switch>\n            <PrivateRoute exact path='/dashboard' component={Dashboard} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}